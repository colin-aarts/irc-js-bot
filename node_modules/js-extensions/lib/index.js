// Generated by IcedCoffeeScript 1.3.3b
(function() {
  'use strict';

  var locals, set_globals;

  set_globals = function() {
    String.prototype.reverse = function() {
      var ary, str;
      ary = this.split('');
      ary = ary.reverse();
      str = ary.join('');
      return str;
    };
    String.prototype.truncate = function(start, end, delimiter) {
      if (delimiter == null) delimiter = '';
      if (!(start != null) && !(end != null)) return this;
      if (start == null) start = 0;
      if (end == null) end = 0;
      if (this.length > (start + end)) {
        return (this.substr(0, start)) + delimiter + (this.substr(-end, end));
      } else {
        return this;
      }
    };
    return RegExp.escape = function(str) {
      if (typeof str !== 'string') return str;
      return str.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
    };
  };

  locals = {
    str_reverse: function(str) {
      var ary;
      if (typeof str !== 'string') return;
      ary = str.split('');
      ary = ary.reverse();
      str = ary.join('');
      return str;
    },
    str_truncate: function(str, start, end, delimiter) {
      if (delimiter == null) delimiter = '';
      if (!(start != null) && !(end != null)) return str;
      if (start == null) start = 0;
      if (end == null) end = 0;
      if (str.length > (start + end)) {
        return (str.substr(0, start)) + delimiter + (str.substr(-end, end));
      } else {
        return str;
      }
    },
    re_escape: function(str) {
      if (typeof str !== 'string') return str;
      return str.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
    }
  };

  Object.defineProperties(module.exports, {
    global: {
      get: function() {
        return set_globals();
      },
      enumerable: true
    },
    local: {
      value: locals,
      enumerable: true
    }
  });

}).call(this);
