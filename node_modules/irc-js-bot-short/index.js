// Generated by IcedCoffeeScript 1.3.3b
(function() {
  'use strict';

  var https, iced, js, shorten, util, __iced_k, __iced_k_noop,
    __slice = [].slice;

  iced = {
    Deferrals: (function() {

      function _Class(_arg) {
        this.continuation = _arg;
        this.count = 1;
        this.ret = null;
      }

      _Class.prototype._fulfill = function() {
        if (!--this.count) return this.continuation(this.ret);
      };

      _Class.prototype.defer = function(defer_params) {
        var _this = this;
        ++this.count;
        return function() {
          var inner_params, _ref;
          inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          if (defer_params != null) {
            if ((_ref = defer_params.assign_fn) != null) {
              _ref.apply(null, inner_params);
            }
          }
          return _this._fulfill();
        };
      };

      return _Class;

    })(),
    findDeferral: function() {
      return null;
    }
  };
  __iced_k = __iced_k_noop = function() {};

  util = require('util');

  https = require('https');

  shorten = require('goo.gl');

  js = (require('js-extensions')).local;

  module.exports = function() {
    var _this = this;
    return this.register_special_command({
      name: 'short',
      description: 'Turn a (long) URL into a short one using « goo.gl »',
      admin_only: false,
      fn: function(event, input_data, output_data) {
        var err, message, result, ___iced_passed_deferral, __iced_deferrals, __iced_k;
        __iced_k = __iced_k_noop;
        ___iced_passed_deferral = iced.findDeferral(arguments);
        (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "irc-js-bot-short\index.coffee",
            funcname: "fn"
          });
          shorten(input_data.args, __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                err = arguments[0];
                return result = arguments[1];
              };
            })(),
            lineno: 28
          }));
          __iced_deferrals._fulfill();
        })(function() {
          if (err) {
            message = "Oops, something went wrong trying to shorten « " + (js.str_truncate(input_data.args, 20, 10, '…')) + " »";
          } else {
            message = "Short URL for « " + (js.str_truncate(input_data.args, 20, 10, '…')) + " » is « " + result + " »";
          }
          return _this.send(output_data.method, output_data.recipient, message);
        });
      }
    });
  };

}).call(this);
